services:
  # Base de datos Facturaci√≥n
  db_facturacion:
    build: ./facturacion
    container_name: postgres_facturacion
    restart: unless-stopped
    env_file: ./facturacion/.env
    ports:
      - "5433:5432"   # expone distinto puerto en el host
    volumes:
      - facturacion_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Base de datos Pagos
  db_pagos:
    build: ./pagos
    container_name: postgres_pagos
    restart: unless-stopped
    env_file: ./pagos/.env
    ports:
      - "5434:5432"
    volumes:
      - pagos_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Base de datos Inventario
  db_inventario:
    build: ./inventario
    container_name: postgres_inventario
    restart: unless-stopped
    env_file: ./inventario/.env
    ports:
      - "5435:5432"
    volumes:
      - inventario_data:/var/lib/postgresql/data
      - ./inventario:/docker-entrypoint-initdb.d  
    networks:
      - app-network

  # Backend Spring Boot
  backend:
    build: 
      context: ./demo
      dockerfile: Dockerfile
    container_name: spring_productos_app
    restart: unless-stopped
    depends_on:
      - db_facturacion
      - db_pagos
      - db_inventario
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      DB_FACTURACION_URL: jdbc:postgresql://db_facturacion:5432/facturaciondb
      DB_PAGOS_URL: jdbc:postgresql://db_pagos:5432/pagosdb
      DB_INVENTARIO_URL: jdbc:postgresql://db_inventario:5432/inventariodb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Mancity2004
      SPRING_PROFILES_ACTIVE: docker

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: productos_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  facturacion_data:
  pagos_data:
  inventario_data:

networks:
  app-network:
    driver: bridge
